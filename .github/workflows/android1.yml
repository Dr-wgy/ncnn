name: android
on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '.github/workflows/android.yml'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'src/*'
      - 'src/layer/*'
      - 'src/layer/arm/**'
      - 'src/layer/riscv/**'
      - 'src/layer/x86/**'
      - 'src/layer/vulkan/**'
  pull_request:
    branches: [master]
    paths:
      - '.github/workflows/android.yml'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'src/*'
      - 'src/layer/*'
      - 'src/layer/arm/**'
      - 'src/layer/riscv/**'
      - 'src/layer/x86/**'
      - 'src/layer/vulkan/**'
concurrency:
  group: android-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
  env:
    PACKAGENAME: ncnn-20250627-android-vulkan
    NCNN_CMAKE_OPTIONS: |
      -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_LATEST_HOME/build/cmake/android.toolchain.cmake \
      -DANDROID_PLATFORM=android-21 \
      -DANDROID_USE_LEGACY_TOOLCHAIN_FILE=False \
      -DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=install \
      -DNCNN_VERSION_STRING="20250627" \
      -DNCNN_BUILD_BENCHMARK=OFF \
      -DNCNN_VULKAN=ON \
      -DNCNN_SHARED_LIB=OFF \

  steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: ndk-fix-debug
      run: sed -i -e '/^  -g$/d' $ANDROID_NDK_LATEST_HOME/build/cmake/android-legacy.toolchain.cmake
    - name: build-armeabi-v7a
      run: |
        mkdir build-armeabi-v7a && cd build-armeabi-v7a
        cmake ${{ env.NCNN_CMAKE_OPTIONS }} -DANDROID_ABI="armeabi-v7a" -DANDROID_ARM_NEON=ON ..
        cmake --build . -j $(nproc)
        cmake --build . --target install/strip
    - name: build-arm64-v8a
      run: |
        mkdir build-arm64-v8a && cd build-arm64-v8a
        cmake ${{ env.NCNN_CMAKE_OPTIONS }}-DANDROID_ABI="arm64-v8a" ..
        cmake --build . -j $(nproc)
        cmake --build . --target install/strip
    - name: build-x86
      run: |
        mkdir build-x86 && cd build-x86
        cmake ${{ env.NCNN_CMAKE_OPTIONS }}-DANDROID_ABI="x86" ..
        cmake --build . -j $(nproc)
        cmake --build . --target install/strip
    - name: build-x86_64
      run: |
        mkdir build-x86_64 && cd build-x86_64
        cmake ${{ env.NCNN_CMAKE_OPTIONS }}-DANDROID_ABI="x86_64" ..
        cmake --build . -j $(nproc)
        cmake --build . --target install/strip
    - name: build-riscv64
      run: |
        mkdir build-riscv64 && cd build-riscv64
        cmake ${{ env.NCNN_CMAKE_OPTIONS }}-DANDROID_ABI="riscv64" ..
        cmake --build . -j $(nproc)
        cmake --build . --target install/strip
    - name: package
      run: |
        rm -rf ${{ env.PACKAGENAME }}
        mkdir -p ${{ env.PACKAGENAME }}
        cp -a build-armeabi-v7a/install ${{ env.PACKAGENAME }}/armeabi-v7a
        cp -a build-arm64-v8a/install ${{ env.PACKAGENAME }}/arm64-v8a
        cp -a build-x86/install ${{ env.PACKAGENAME }}/x86
        cp -a build-x86_64/install ${{ env.PACKAGENAME }}/x86_64
        cp -a build-riscv64/install ${{ env.PACKAGENAME }}/riscv64
        rm -f ${{ env.PACKAGENAME }}.zip
        zip -9 -y -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip